# Generated by Django 2.1.4 on 2019-01-03 15:18

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    replaces = [('licornes', '0001_initial'), ('licornes', '0002_auto_20181229_2201'), ('licornes', '0003_auto_20181230_1118'), ('licornes', '0004_auto_20181230_1142'), ('licornes', '0005_auto_20181230_1143'), ('licornes', '0006_auto_20181230_1225'), ('licornes', '0007_auto_20181230_1640'), ('licornes', '0008_auto_20181230_1641'), ('licornes', '0009_auto_20190101_1730'), ('licornes', '0010_auto_20190101_1953'), ('licornes', '0011_auto_20190101_1955'), ('licornes', '0012_auto_20190102_0018'), ('licornes', '0013_auto_20190102_1739'), ('licornes', '0014_licorne_image'), ('licornes', '0015_remove_licorne_photo'), ('licornes', '0016_auto_20190103_1505'), ('licornes', '0017_auto_20190103_1527'), ('licornes', '0018_auto_20190103_1528'), ('licornes', '0019_auto_20190103_1537')]

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Etape',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etape_date', models.DateField()),
                ('localisation', models.CharField(default=None, max_length=100)),
                ('current', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Licorne',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(help_text='Choisissez un nom pour votre licorne.', max_length=50)),
                ('creation_date', models.DateField(default=datetime.date.today, verbose_name='Date de création')),
                ('identifiant', models.CharField(help_text="Saisissez l'identifiant qui figure sur votre licorne.", max_length=50, unique=True)),
                ('createur', models.ForeignKey(help_text="Ce champ n'existe que pendant le temps de développement. Par la suite, il sera rempli automatiquement.", on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('image', models.ImageField(blank=True, help_text='Mettez une photo de votre licorne, ou un avatar.', null=True, upload_to='')),
            ],
        ),
        migrations.AddField(
            model_name='etape',
            name='licorne',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='licornes.Licorne'),
        ),
        migrations.AddField(
            model_name='etape',
            name='auteur',
            field=models.ForeignKey(help_text="Ce champ n'existe que pendant le temps de développement. Par la suite, il sera rempli automatiquement.", on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='etape',
            name='media',
            field=models.TextField(blank=True, help_text="Ecrivez ici le code embed d'une vidéo.", null=True),
        ),
        migrations.AlterField(
            model_name='etape',
            name='etape_date',
            field=models.DateField(default=datetime.date.today),
        ),
        migrations.AlterField(
            model_name='etape',
            name='localisation',
            field=models.CharField(max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='etape',
            name='localisation',
            field=models.CharField(max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='etape',
            name='localisation',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='etape',
            name='latitude',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='etape',
            name='longitude',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='etape',
            name='etape_date',
            field=models.DateTimeField(default=datetime.date.today),
        ),
        migrations.AlterField(
            model_name='etape',
            name='localisation',
            field=models.CharField(blank=True, help_text='<br />Saisissez une ville ou un pays, le champ se complètera automatiquement.', max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='etape',
            name='etape_date',
            field=models.DateTimeField(default=datetime.datetime.now),
        ),
        migrations.AlterField(
            model_name='etape',
            name='etape_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
    ]
